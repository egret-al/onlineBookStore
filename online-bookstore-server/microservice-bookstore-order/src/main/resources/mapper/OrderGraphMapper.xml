<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.onlinebookstore.mapper.OrderGraphMapper">
    <resultMap id="OrderAnalysisItemMap" type="com.onlinebookstore.entity.orderserver.OrderAnalysisItem">
        <id column="book_id" property="bookId" jdbcType="INTEGER"/>
        <result column="book_name" property="bookName" jdbcType="VARCHAR"/>
        <result column="total_price" property="totalPrice" jdbcType="INTEGER"/>
        <result column="total_count" property="totalCount" jdbcType="INTEGER"/>
        <result column="data_date" property="dataDate" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="selectOrderItemByBookId" resultMap="OrderAnalysisItemMap">
        select book_id, book_name, sum(whole_price) total_price, sum(product_count) total_count,
            date_format(create_time, '%Y-%m') data_date
        from sys_order_success
            where book_id = #{bookId} and date_sub(curdate(), interval #{month} month) &lt;= date(create_time)
        group by month(create_time)
        order by month(create_time);
    </select>

    <select id="getTopCountBookName" resultType="java.lang.Integer">
        select book_id
        from sys_order_success
        group by book_name
        order by sum(product_count) desc
        limit #{top};
    </select>

    <select id="getTopPriceBookName" resultType="java.lang.Integer">
        select book_id
        from sys_order_success
        group by book_name
        order by sum(whole_price) desc
        limit #{top};
    </select>
</mapper>